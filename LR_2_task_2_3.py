{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMTy8Vnx4iYqOU4pqAY0yRs"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pxcYHN15euEn","executionInfo":{"status":"ok","timestamp":1734772279802,"user_tz":-120,"elapsed":36043,"user":{"displayName":"Ярослав Білотіл","userId":"06797585363548962278"}},"outputId":"147082a2-f4df-4a31-9e9d-876315269633"},"outputs":[{"output_type":"stream","name":"stdout","text":["Сигмоїдальне ядро:\n","Accuracy: 0.60\n","Precision: 0.61\n","Recall: 0.60\n","F1 Score: 0.61\n"]}],"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","from sklearn import preprocessing\n","from sklearn.svm import SVC\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score\n","\n","# Вхідний файл, який містить дані\n","input_file = 'income_data.txt'\n","\n","# Читання даних\n","X = []\n","y = []\n","count_class1 = 0\n","count_class2 = 0\n","max_datapoints = 25000\n","\n","with open(input_file, 'r') as f:\n","    for line in f.readlines():\n","        if count_class1 >= max_datapoints and count_class2 >= max_datapoints:\n","            break\n","        if '?' in line:\n","            continue\n","        data = line.strip().split(', ')  # Забираємо пробіли і розбиваємо\n","        if data[-1] == '<=50K' and count_class1 < max_datapoints:\n","            X.append(data[:-1])  # Додаємо тільки фічі\n","            y.append(data[-1])  # Додаємо цільову змінну\n","            count_class1 += 1\n","        elif data[-1] == '>50K' and count_class2 < max_datapoints:\n","            X.append(data[:-1])\n","            y.append(data[-1])\n","            count_class2 += 1\n","\n","# Перетворення на масив numpy\n","X = np.array(X)\n","y = np.array(y)\n","\n","# Перетворення рядкових даних на числові\n","label_encoders = []\n","X_encoded = np.empty(X.shape)\n","\n","for i in range(X.shape[1]):\n","    if X[0, i].isdigit():  # Якщо стовпець числовий\n","        X_encoded[:, i] = X[:, i].astype(int)\n","        label_encoders.append(None)  # Заглушка для числових даних\n","    else:  # Якщо стовпець текстовий\n","        le = preprocessing.LabelEncoder()\n","        X_encoded[:, i] = le.fit_transform(X[:, i])\n","        label_encoders.append(le)\n","\n","# Кодування цільової змінної\n","target_encoder = preprocessing.LabelEncoder()\n","y = target_encoder.fit_transform(y)\n","\n","# Поділ даних на навчальні та тестові набори\n","X_train, X_test, y_train, y_test = train_test_split(X_encoded, y, test_size=0.2, random_state=5)\n","\n","# Сигмоїдальне ядро\n","sigmoid_classifier = SVC(kernel='sigmoid', random_state=0)\n","sigmoid_classifier.fit(X_train, y_train)\n","y_sigmoid_pred = sigmoid_classifier.predict(X_test)\n","\n","sigmoid_accuracy = accuracy_score(y_test, y_sigmoid_pred)\n","sigmoid_precision = precision_score(y_test, y_sigmoid_pred, average='weighted')\n","sigmoid_recall = recall_score(y_test, y_sigmoid_pred, average='weighted')\n","sigmoid_f1 = f1_score(y_test, y_sigmoid_pred, average='weighted')\n","\n","# Виведення результатів\n","print(\"Сигмоїдальне ядро:\")\n","print(f\"Accuracy: {sigmoid_accuracy:.2f}\")\n","print(f\"Precision: {sigmoid_precision:.2f}\")\n","print(f\"Recall: {sigmoid_recall:.2f}\")\n","print(f\"F1 Score: {sigmoid_f1:.2f}\")\n"]}]}